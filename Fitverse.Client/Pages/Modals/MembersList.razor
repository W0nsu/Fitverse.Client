@inject HttpClient Http

@using Fitverse.Client.Models

<div class="flex flex-col" style="width: 80vw; height: 90vh; overflow-y: scroll;">
    <div class="flex flex-col">
    <div class="flex flex-row justify-between w-full h-14 bg-fitversePaleBlue bg-opacity-20 mt-8">
            <div class="mx-16 my-auto h-7 font-bold">
                Members
            </div>
            <div class="h-1/2"></div>
        </div>
        <div class="flex flex-row justify-between w-full py-12 px-16 h-32 select-none">
            <div class="flex flex-row justify-between w-1/2 bg-fitverseLightGray shadow text-black">
                    <input class="text-xs font-bold my-auto w-10/12 ml-2 bg-fitverseLightGray outline-none" @bind-value="_searchText" @bind-value:event="oninput" placeholder="SEARCH BY SURNAME">
                </div>
                <div class="flex flex-row justify-end w-1/2">
                <div class="flex flex-row justify-around h-1/6 w-1/3">
                    @if (totalPages == 1)
                    {
                        <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                        <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                        <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                        <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                        <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                    }
                    else if (totalPages == 2)
                    {
                        if (pageNumber == 1)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 1)">@(pageNumber + 1)</div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                        }
                        else
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 1)">@(pageNumber - 1)</div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                        }
                    }
                    else
                    {
                        @if (pageNumber > 1)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="DecrementPageNumber">
                                <img src="icon/back.svg" alt="" class="h-1/2 w-1/2"/>
                            </div>
                        }
                        else
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible" @onclick="DecrementPageNumber">
                                <img src="icon/back.svg" alt="" class="h-1/2 w-1/2"/>
                            </div>
                        }
    
                        @if (pageNumber <= totalPages - 2)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                        }
                        else if (pageNumber == totalPages)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 2)">@(pageNumber - 2)</div>
                        }
                        else
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 1)">@(pageNumber - 1)</div>
                        }
    
                        @if (pageNumber == totalPages - 1)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@(pageNumber)</div>
                        }
                        else if (pageNumber == totalPages)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 1)">@(pageNumber - 1)</div>
                        }
                        else
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 1)">@(pageNumber + 1)</div>
                        }
    
                        @if (pageNumber == totalPages)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@(pageNumber)</div>
                        }
                        else if (pageNumber == totalPages - 1)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 1)">@(pageNumber + 1)</div>
                        }
                        else
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 2)">@(pageNumber + 2)</div>
                        }
    
    
                        @if (pageNumber != totalPages)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="IncrementPageNumber">
                                <img src="icon/next.svg" alt="" class="h-1/2 w-1/2"/>
                            </div>
                        }
                        else
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible" @onclick="IncrementPageNumber">
                                <img src="icon/next.svg" alt="" class="h-1/2 w-1/2"/>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    
        <section class="flex flex-col text-left mb-auto">
            <div class="flex flex-row justify-between h-10 top-bar">
                <div class="flex flex-row w-5/6 justify-around">
                    <div class="my-auto w-1/5">SURNAME</div>
                    <div class="my-auto w-1/5">NAME</div>
                    <div class="my-auto w-1/4">EMAIL</div>
                </div>
                <div class="my-auto w-40 mr-8"></div>
            </div>
            @if (IsCalendarServiceAvalible)
            {
                @for (var memberNumber = 0; memberNumber < PaginatedFilteredMembersList.Count; memberNumber++)
                {
                    var member = PaginatedFilteredMembersList[memberNumber];
                    <div class="flex flex-row justify-between h-24 @MemberColor(memberNumber + 1) bg-opacity-20">
                        <div class="flex flex-row w-5/6 justify-around">
                            <div class="w-1/5 text-left my-auto font-bold mr-2">@PaginatedFilteredMembersList[memberNumber].SurName</div>
                            <div class="w-1/5 text-left my-auto">@PaginatedFilteredMembersList[memberNumber].Name</div>
                            <div class="w-1/4 text-left my-auto">@PaginatedFilteredMembersList[memberNumber].Email</div>
                        </div>
                        <div class="flex flex-col justify-center bg-fitverseLightPurple mr-8 my-auto h-1/3 w-40 shadow text-white text-center px-2 cursor-pointer" @onclick="() => SignUpForClassesAsync(member)">
                            SIGN UP
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="mx-auto my-8 italic text-fitverseMidGray">Members temporarily unavalible. Try again later.</div>
            }
            <div class="flex flex-row justify-between w-full py-8 px-16 h-24">
                <div class="w-1/2 h-full"></div>
                <div class="flex flex-row justify-end w-1/2">
                    <div class="flex flex-row justify-around h-1/6 w-1/3">
                        @if (totalPages == 1)
                        {
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                        }
                        else if (totalPages == 2)
                        {
                            if (pageNumber == 1)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 1)">@(pageNumber + 1)</div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            }
                            else
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 1)">@(pageNumber - 1)</div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible"></div>
                            }
                        }
                        else
                        {
                            @if (pageNumber > 1)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="DecrementPageNumber">
                                    <img src="icon/back.svg" alt="" class="h-1/2 w-1/2"/>
                                </div>
                            }
                            else
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible" @onclick="DecrementPageNumber">
                                    <img src="icon/back.svg" alt="" class="h-1/2 w-1/2"/>
                                </div>
                            }
    
                            @if (pageNumber <= totalPages - 2)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@pageNumber</div>
                            }
                            else if (pageNumber == totalPages)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 2)">@(pageNumber - 2)</div>
                            }
                            else
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 1)">@(pageNumber - 1)</div>
                            }
    
                            @if (pageNumber == totalPages - 1)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@(pageNumber)</div>
                            }
                            else if (pageNumber == totalPages)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber - 1)">@(pageNumber - 1)</div>
                            }
                            else
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 1)">@(pageNumber + 1)</div>
                            }
    
                            @if (pageNumber == totalPages)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseCyan text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber)">@(pageNumber)</div>
                            }
                            else if (pageNumber == totalPages - 1)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 1)">@(pageNumber + 1)</div>
                            }
                            else
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="() => SetPageNumber(pageNumber + 2)">@(pageNumber + 2)</div>
                            }
    
    
                            @if (pageNumber != totalPages)
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center justify-center bg-fitverseMidGray text-black cursor-pointer" @onclick="IncrementPageNumber">
                                    <img src="icon/next.svg" alt="" class="h-1/2 w-1/2"/>
                                </div>
                            }
                            else
                            {
                                <div class="text-xs rounded-full w-6 h-6 flex items-center invisible" @onclick="IncrementPageNumber">
                                    <img src="icon/next.svg" alt="" class="h-1/2 w-1/2"/>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
    
        </section></div>
</div>

<style>
    .blazored-modal{
        padding: 0!important;
        border: 0!important;
    }
    
    .blazored-modal-header{
        display: none!important;
    }
</style>

@code {

    [CascadingParameter]
    public IModalService Modal { get; set; }
    
    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }
    
    [Parameter]
    public CalendarClass CalendarClass { get; set; } 
    [Parameter]
    public List<ReservationGetter> ReservationsList { get; set; }

    private string _searchText = "";
    private string _previousSearchText;
    private int pageSize = 20;
    private int pageNumber = 1;
    private int totalPages => SetTotalPages();

    private bool IsCalendarServiceAvalible = true;

    List<Member> _membersList = new();
    List<Member> FilteredMembersList => _membersList.Where(member => member.SurName.ToLower().Contains(_searchText.ToLower())).ToList();

    List<Member> PaginatedFilteredMembersList => MembersListPagination();

    private ReservationSetter _reservation = new();

    protected override async Task OnInitializedAsync()
    {
        _membersList = await GetMembersAsync();
        await ExcludeSignedMembersAsync();
        if (_membersList is not null)
        {
            MembersListPagination();
        }
    }

    private List<Member> MembersListPagination()
    {
        if (_previousSearchText != _searchText)
        {
            pageNumber = 1;
            StateHasChanged();
        }
        _previousSearchText = _searchText;
        return FilteredMembersList.Skip((pageNumber - 1) * pageSize).Take(pageSize).ToList();
    }
    
    private async Task<List<Member>> GetMembersAsync()
    {
        try
        {
            var result = await Http.GetAsync("api/cs/members");
            result.EnsureSuccessStatusCode();

            var members = await result.Content.ReadFromJsonAsync<List<Member>>();
            return members?.OrderBy(member => member.SurName).ToList();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            IsCalendarServiceAvalible = false;
            return new List<Member>();
        }
    }

    private async Task SignUpForClassesAsync(Member member)
    {
        try
        {
            _reservation.ClassId = CalendarClass.ClassId;
            _reservation.MemberId = member.MemberId;
            var result = await Http.PostAsJsonAsync("api/cs/classes/reservation", _reservation);
            result.EnsureSuccessStatusCode();
            
            if (result.IsSuccessStatusCode)
            {
                var updatedReservations= await Http.GetAsync($"api/cs/classes/{CalendarClass.ClassId}/reservation");
                updatedReservations.EnsureSuccessStatusCode();

                ReservationsList = await updatedReservations.Content.ReadFromJsonAsync<List<ReservationGetter>>();
                await ExcludeSignedMembersAsync();
                StateHasChanged();
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            IsCalendarServiceAvalible = false;
        }
    }

    private async Task ExcludeSignedMembersAsync()
    {
        foreach (var member in ReservationsList.Select(reservationEntity => _membersList.FirstOrDefault(x => x.MemberId == reservationEntity.MemberId)).Where(member => member is not null))
        {
            _membersList.Remove(member);
        }
        if (ReservationsList.Count == CalendarClass.Limit)
        {
            await ModalInstance.CloseAsync();
        }
    }

    private void IncrementPageNumber()
    {
        if (pageNumber >= totalPages)
            return;
        pageNumber++;
    }

    private void DecrementPageNumber()
    {
        if (pageNumber <= 1)
            return;
        pageNumber--;
    }

    private void SetPageNumber(int number)
    {
        if (number > totalPages)
            return;
        pageNumber = number;
    }

    private string MemberColor(int memberNumber)
    {
        switch (memberNumber)
        {
            case 2:
            case 10:
            case 14:
                return "bg-fitversePaleBlue";
            case 4:
            case 8:
            case 16:
            case 20:
                return "bg-fitverseLightPurple";
            case 6:
            case 18:
                return "bg-fitverseDarkPurple";
            case 12:
                return "bg-fitverseCyan";
        }
        return "bg-white";
    }

    private int SetTotalPages()
    {
        var pagesCount = (float) FilteredMembersList.Count / pageSize;
        if (pagesCount <= 0)
        {
            return 1;
        }
        if (pagesCount > (int) pagesCount)
        {
            return (int) pagesCount + 1;
        }
        return (int) pagesCount;
    }

}